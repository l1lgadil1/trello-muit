{"moduleStructure":{"trello":{"ui":{"card":"Card component with drag-n-drop support","add-card-btn":"Button for adding new cards","card-list":"Container for cards with drag-n-drop support","column-list-search":"Search input for filtering cards in a column","column-header":"Column header with title, edit and delete actions","column":"Column component with drag-n-drop support","actions":"Global actions like add column and show/hide unassigned","column-modal":"Modal for creating/editing columns","card-modal":"Modal for creating/editing cards","layout":"Main layout component for the board"},"lib":{"use-column":"Hook for managing columns and cards state","use-actions":"Hook for managing UI actions and modals"},"model":{"types":{"Column":{"id":"string","title":"string","order":"number","boardId":"string"},"Card":{"id":"string","title":"string","description":"string","columnId":"string | null","order":"number","boardId":"string"}}}}},"components":{"Card":{"props":{"title":"string","description":"string","isDragged":"boolean","isDragOver":"boolean","handleCardDragStart":"(e: DragEvent) => void","handleCardDragOver":"(e: DragEvent) => void","handleCardDrop":"(e: DragEvent) => void","handleDragEnd":"() => void","onClickEdit":"() => void","onClickDelete":"() => void"}},"Column":{"props":{"header":"ReactNode (ColumnHeader)","search":"ReactNode (ColumnListSearch)","list":"ReactNode (CardList)","isDragged":"boolean","onDragStart":"(e: DragEvent) => void","onDragOver":"(e: DragEvent) => void","onDrop":"(e: DragEvent) => void","onDragEnd":"() => void"}},"CardList":{"props":{"list":"ReactNode","isDragged":"boolean","onDragOver":"(e: DragEvent) => void","onDrop":"(e: DragEvent) => void"}},"ColumnModal":{"props":{"isColumnModalOpen":"boolean","isEditing":"boolean","closeModal":"() => void","onSubmit":"(e: FormEvent) => void","columnTitle":"string","setColumnTitle":"(title: string) => void"}},"CardModal":{"props":{"isCardModalOpen":"boolean","isEditing":"boolean","closeModal":"() => void","onSubmit":"(e: FormEvent) => void","cardTitle":"string","setCardTitle":"(title: string) => void","cardDescription":"string","setCardDescription":"(desc: string) => void","cardColumnId":"string","setCardColumnId":"(id: string) => void","activeColumnId":"string | null","setActiveColumnId":"(id: string | null) => void","columns":"ReactNode[]"}}},"hooks":{"useColumn":{"params":["boardId: string | undefined"],"returns":{"searchQuery":"string","setSearchQuery":"(query: string) => void","columns":"Column[]","draggedCard":"Card | null","dragOverColumnId":"string | null","dragOverCardId":"string | null","handleColumnDragStart":"(e: DragEvent, column: Column) => void","handleColumnDragOver":"(e: DragEvent, columnId: string) => void","handleColumnDrop":"(e: DragEvent, columnId: string) => void","handleCardDragStart":"(e: DragEvent, card: Card) => void","handleCardDragOver":"(e: DragEvent, cardId: string) => void","handleCardDrop":"(e: DragEvent, columnId: string, cardId?: string) => void","handleDragEnd":"() => void","getColumnCards":"(columnId: string) => Card[]","sortedColumns":"Column[]","filteredCards":"Card[]","createColumn":"(title: string) => Promise<void>","updateColumn":"(id: string, title: string, order: number) => Promise<void>","deleteColumn":"(id: string) => Promise<void>","createCard":"(columnId: string, title: string, description: string) => Promise<void>","updateCard":"(id: string, title: string, description: string, columnId: string | null, order: number) => Promise<void>","deleteCard":"(id: string) => Promise<void>","sortByOrder":"(items: { order: number }[]) => { order: number }[]"}},"useActions":{"returns":{"isColumnModalOpen":"boolean","isCardModalOpen":"boolean","editingColumn":"Column | null","editingCard":"Card | null","activeColumnId":"string | null","showUnassigned":"boolean","columnTitle":"string","cardTitle":"string","cardDescription":"string","cardColumnId":"string","setIsColumnModalOpen":"(open: boolean) => void","setIsCardModalOpen":"(open: boolean) => void","setEditingColumn":"(column: Column | null) => void","setEditingCard":"(card: Card | null) => void","setActiveColumnId":"(id: string | null) => void","setShowUnassigned":"(show: boolean) => void","setColumnTitle":"(title: string) => void","setCardTitle":"(title: string) => void","setCardDescription":"(desc: string) => void","setCardColumnId":"(id: string) => void"}}},"features":{"dragAndDrop":{"column":"Drag and drop columns to reorder","card":{"withinColumn":"Drag and drop cards within the same column","betweenColumns":"Drag and drop cards between different columns","toUnassigned":"Drag cards to unassigned column","fromUnassigned":"Drag cards from unassigned to columns"}},"search":{"global":"Search across all cards","column":"Search within specific column"},"modals":{"column":{"create":"Create new column","edit":"Edit existing column"},"card":{"create":"Create new card","edit":"Edit existing card","move":"Move card between columns"}},"unassignedCards":{"view":"Toggle visibility of unassigned cards","manage":"Move cards to/from unassigned state"}},"practices":{"stateManagement":{"local":"Use local state for UI components","global":"Use hooks for shared state","persistence":"Use services for API calls and data persistence"},"dragAndDrop":{"visual":"Provide visual feedback during drag operations","validation":"Validate drop targets before allowing drops","ordering":"Maintain correct order after drag operations"},"errorHandling":{"api":"Handle API errors gracefully","validation":"Validate user input before submission","feedback":"Provide user feedback for actions"},"performance":{"memoization":"Memoize expensive computations","lazyLoading":"Load components and data on demand","optimisticUpdates":"Update UI optimistically for better UX"}}}
